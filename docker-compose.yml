services:
  # PostgreSQL Database
  postgres:
    image: postgres:17-alpine
    container_name: onboardd-postgres
    environment:
      POSTGRES_DB: onboardd_new
      POSTGRES_USER: onboardd_user
      POSTGRES_PASSWORD: Maahi123
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./onboardd.sql:/docker-entrypoint-initdb.d/onboardd.sql
    ports:
      - "5433:5432"
    restart: unless-stopped

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: onboardd-backend
    environment:
      - NODE_ENV=production
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=onboardd_new
      - DB_USER=onboardd_user
      - DB_PASSWORD=Maahi123
      - PORT=5008
      - JWT_SECRET=f5229580f156aa586d01e7e2f3c1e491c2c5f9ddad443f624dab69d873928e8d
      - JWT_EXPIRES_IN=7d
      - CORS_ORIGIN=http://149.102.158.71:3008
      - EMAIL_HOST=smtp.gmail.com
      - EMAIL_PORT=465
      - EMAIL_SECURE=true
      - EMAIL_USER=mahendratejak9@gmail.com
      - EMAIL_PASS=clfh lkfr jahr mzew
      - EMAIL_FROM=hr@nxzen.com
      - EMAIL_ENABLED=true
    ports:
      - "5008:5008"
    depends_on:
      - postgres
    restart: unless-stopped

  # Frontend React App
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: onboardd-frontend
    ports:
      - "3008:3008"
    depends_on:
      - backend
    restart: unless-stopped

volumes:
  postgres_data:
