{"ast":null,"code":"import React,{createContext,useContext,useState,useEffect}from\"react\";import axios from\"axios\";import toast from\"react-hot-toast\";// Configure axios defaults\nimport{jsx as _jsx}from\"react/jsx-runtime\";axios.defaults.timeout=15000;// 15 second timeout\naxios.defaults.baseURL=\"http://localhost:5001/api\";const AuthContext=/*#__PURE__*/createContext();export const useAuth=()=>{const context=useContext(AuthContext);if(!context){throw new Error(\"useAuth must be used within an AuthProvider\");}return context;};export const AuthProvider=_ref=>{let{children}=_ref;const[user,setUser]=useState(null);const[loading,setLoading]=useState(true);const[token,setToken]=useState(localStorage.getItem(\"token\"));// Check if user is authenticated on app load and configure axios defaults\nuseEffect(()=>{const checkAuth=async()=>{// Configure axios defaults first\nif(token){axios.defaults.headers.common[\"Authorization\"]=\"Bearer \".concat(token);console.log(\"🔐 Axios Authorization header set:\",axios.defaults.headers.common[\"Authorization\"]);try{const response=await axios.get(\"/auth/me\");setUser(response.data.user);}catch(error){var _error$response,_error$response$data,_error$response2;console.error(\"Auth check failed:\",error);// Handle different types of errors\nif(error.code===\"ECONNABORTED\"||error.message===\"Request aborted\"){console.log(\"🔐 Auth request timed out or was aborted\");// Don't clear token for timeout errors, just log and continue\nsetUser(null);}else if((_error$response=error.response)!==null&&_error$response!==void 0&&(_error$response$data=_error$response.data)!==null&&_error$response$data!==void 0&&_error$response$data.requiresPasswordReset){console.log(\"🔐 User needs to change temporary password\");toast.error(\"Please change your temporary password to continue\");localStorage.removeItem(\"token\");setToken(null);setUser(null);delete axios.defaults.headers.common[\"Authorization\"];}else if(((_error$response2=error.response)===null||_error$response2===void 0?void 0:_error$response2.status)===401){// Invalid token - clear it\nconsole.log(\"🔐 Invalid token, clearing auth\");localStorage.removeItem(\"token\");setToken(null);setUser(null);delete axios.defaults.headers.common[\"Authorization\"];}else{// Other errors - clear auth to be safe\nconsole.log(\"🔐 Auth error, clearing auth:\",error.message);localStorage.removeItem(\"token\");setToken(null);setUser(null);delete axios.defaults.headers.common[\"Authorization\"];}}}else{delete axios.defaults.headers.common[\"Authorization\"];console.log(\"🔐 Axios Authorization header cleared\");}setLoading(false);};checkAuth();},[token]);const login=async(email,password)=>{try{const response=await axios.post(\"/auth/login\",{email,password});if(response.data.requiresPasswordReset){return{success:true,requiresPasswordReset:true,userId:response.data.userId,email:response.data.email,role:response.data.role};}const{token:newToken,user:userData}=response.data;localStorage.setItem(\"token\",newToken);setToken(newToken);setUser(userData);toast.success(\"Login successful!\");return{success:true};}catch(error){var _error$response3,_error$response3$data;const message=((_error$response3=error.response)===null||_error$response3===void 0?void 0:(_error$response3$data=_error$response3.data)===null||_error$response3$data===void 0?void 0:_error$response3$data.error)||\"Login failed\";toast.error(message);return{success:false,error:message};}};const resetPassword=async(userId,newPassword)=>{try{await axios.post(\"/auth/reset-password\",{userId,newPassword});toast.success(\"Password updated successfully! Please login with your new password.\");return{success:true};}catch(error){var _error$response4,_error$response4$data;const message=((_error$response4=error.response)===null||_error$response4===void 0?void 0:(_error$response4$data=_error$response4.data)===null||_error$response4$data===void 0?void 0:_error$response4$data.error)||\"Password reset failed\";toast.error(message);return{success:false,error:message};}};const logout=()=>{localStorage.removeItem(\"token\");setToken(null);setUser(null);toast.success(\"Logged out successfully\");};const changePassword=async(currentPassword,newPassword)=>{try{await axios.post(\"/auth/change-password\",{currentPassword,newPassword});toast.success(\"Password changed successfully!\");return{success:true};}catch(error){var _error$response5,_error$response5$data;const message=((_error$response5=error.response)===null||_error$response5===void 0?void 0:(_error$response5$data=_error$response5.data)===null||_error$response5$data===void 0?void 0:_error$response5$data.error)||\"Password change failed\";toast.error(message);return{success:false,error:message};}};const value={user,token,loading,login,logout,resetPassword,changePassword};return/*#__PURE__*/_jsx(AuthContext.Provider,{value:value,children:children});};","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","axios","toast","jsx","_jsx","defaults","timeout","baseURL","AuthContext","useAuth","context","Error","AuthProvider","_ref","children","user","setUser","loading","setLoading","token","setToken","localStorage","getItem","checkAuth","headers","common","concat","console","log","response","get","data","error","_error$response","_error$response$data","_error$response2","code","message","requiresPasswordReset","removeItem","status","login","email","password","post","success","userId","role","newToken","userData","setItem","_error$response3","_error$response3$data","resetPassword","newPassword","_error$response4","_error$response4$data","logout","changePassword","currentPassword","_error$response5","_error$response5$data","value","Provider"],"sources":["/Users/stalin_j/Downloads/test2/onboard/frontend/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport toast from \"react-hot-toast\";\n\n// Configure axios defaults\naxios.defaults.timeout = 15000; // 15 second timeout\naxios.defaults.baseURL = \"http://localhost:5001/api\";\n\nconst AuthContext = createContext();\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error(\"useAuth must be used within an AuthProvider\");\n  }\n  return context;\n};\n\nexport const AuthProvider = ({ children }) => {\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [token, setToken] = useState(localStorage.getItem(\"token\"));\n\n  // Check if user is authenticated on app load and configure axios defaults\n  useEffect(() => {\n    const checkAuth = async () => {\n      // Configure axios defaults first\n      if (token) {\n        axios.defaults.headers.common[\"Authorization\"] = `Bearer ${token}`;\n        console.log(\n          \"🔐 Axios Authorization header set:\",\n          axios.defaults.headers.common[\"Authorization\"]\n        );\n\n        try {\n          const response = await axios.get(\"/auth/me\");\n          setUser(response.data.user);\n        } catch (error) {\n          console.error(\"Auth check failed:\", error);\n\n          // Handle different types of errors\n          if (\n            error.code === \"ECONNABORTED\" ||\n            error.message === \"Request aborted\"\n          ) {\n            console.log(\"🔐 Auth request timed out or was aborted\");\n            // Don't clear token for timeout errors, just log and continue\n            setUser(null);\n          } else if (error.response?.data?.requiresPasswordReset) {\n            console.log(\"🔐 User needs to change temporary password\");\n            toast.error(\"Please change your temporary password to continue\");\n            localStorage.removeItem(\"token\");\n            setToken(null);\n            setUser(null);\n            delete axios.defaults.headers.common[\"Authorization\"];\n          } else if (error.response?.status === 401) {\n            // Invalid token - clear it\n            console.log(\"🔐 Invalid token, clearing auth\");\n            localStorage.removeItem(\"token\");\n            setToken(null);\n            setUser(null);\n            delete axios.defaults.headers.common[\"Authorization\"];\n          } else {\n            // Other errors - clear auth to be safe\n            console.log(\"🔐 Auth error, clearing auth:\", error.message);\n            localStorage.removeItem(\"token\");\n            setToken(null);\n            setUser(null);\n            delete axios.defaults.headers.common[\"Authorization\"];\n          }\n        }\n      } else {\n        delete axios.defaults.headers.common[\"Authorization\"];\n        console.log(\"🔐 Axios Authorization header cleared\");\n      }\n      setLoading(false);\n    };\n\n    checkAuth();\n  }, [token]);\n\n  const login = async (email, password) => {\n    try {\n      const response = await axios.post(\"/auth/login\", {\n        email,\n        password,\n      });\n\n      if (response.data.requiresPasswordReset) {\n        return {\n          success: true,\n          requiresPasswordReset: true,\n          userId: response.data.userId,\n          email: response.data.email,\n          role: response.data.role,\n        };\n      }\n\n      const { token: newToken, user: userData } = response.data;\n\n      localStorage.setItem(\"token\", newToken);\n      setToken(newToken);\n      setUser(userData);\n\n      toast.success(\"Login successful!\");\n      return { success: true };\n    } catch (error) {\n      const message = error.response?.data?.error || \"Login failed\";\n      toast.error(message);\n      return { success: false, error: message };\n    }\n  };\n\n  const resetPassword = async (userId, newPassword) => {\n    try {\n      await axios.post(\"/auth/reset-password\", {\n        userId,\n        newPassword,\n      });\n\n      toast.success(\n        \"Password updated successfully! Please login with your new password.\"\n      );\n      return { success: true };\n    } catch (error) {\n      const message = error.response?.data?.error || \"Password reset failed\";\n      toast.error(message);\n      return { success: false, error: message };\n    }\n  };\n\n  const logout = () => {\n    localStorage.removeItem(\"token\");\n    setToken(null);\n    setUser(null);\n    toast.success(\"Logged out successfully\");\n  };\n\n  const changePassword = async (currentPassword, newPassword) => {\n    try {\n      await axios.post(\"/auth/change-password\", {\n        currentPassword,\n        newPassword,\n      });\n\n      toast.success(\"Password changed successfully!\");\n      return { success: true };\n    } catch (error) {\n      const message = error.response?.data?.error || \"Password change failed\";\n      toast.error(message);\n      return { success: false, error: message };\n    }\n  };\n\n  const value = {\n    user,\n    token,\n    loading,\n    login,\n    logout,\n    resetPassword,\n    changePassword,\n  };\n\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}