{"ast":null,"code":"var _jsxFileName = \"/Users/stalin_j/Downloads/test2/onboard/frontend/src/contexts/AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport toast from \"react-hot-toast\";\n\n// Configure axios defaults\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\naxios.defaults.timeout = 15000; // 15 second timeout\naxios.defaults.baseURL = \"http://localhost:5001/api\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error(\"useAuth must be used within an AuthProvider\");\n  }\n  return context;\n};\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [token, setToken] = useState(localStorage.getItem(\"token\"));\n\n  // Check if user is authenticated on app load and configure axios defaults\n  useEffect(() => {\n    const checkAuth = async () => {\n      // Configure axios defaults first\n      if (token) {\n        axios.defaults.headers.common[\"Authorization\"] = `Bearer ${token}`;\n        console.log(\"üîê Axios Authorization header set:\", axios.defaults.headers.common[\"Authorization\"]);\n        try {\n          const response = await axios.get(\"/auth/me\");\n          setUser(response.data.user);\n        } catch (error) {\n          var _error$response, _error$response$data, _error$response2;\n          console.error(\"Auth check failed:\", error);\n\n          // Handle different types of errors\n          if (error.code === \"ECONNABORTED\" || error.message === \"Request aborted\") {\n            console.log(\"üîê Auth request timed out or was aborted\");\n            // Don't clear token for timeout errors, just log and continue\n            setUser(null);\n          } else if ((_error$response = error.response) !== null && _error$response !== void 0 && (_error$response$data = _error$response.data) !== null && _error$response$data !== void 0 && _error$response$data.requiresPasswordReset) {\n            console.log(\"üîê User needs to change temporary password\");\n            toast.error(\"Please change your temporary password to continue\");\n            localStorage.removeItem(\"token\");\n            setToken(null);\n            setUser(null);\n            delete axios.defaults.headers.common[\"Authorization\"];\n          } else if (((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.status) === 401) {\n            // Invalid token - clear it\n            console.log(\"üîê Invalid token, clearing auth\");\n            localStorage.removeItem(\"token\");\n            setToken(null);\n            setUser(null);\n            delete axios.defaults.headers.common[\"Authorization\"];\n          } else {\n            // Other errors - clear auth to be safe\n            console.log(\"üîê Auth error, clearing auth:\", error.message);\n            localStorage.removeItem(\"token\");\n            setToken(null);\n            setUser(null);\n            delete axios.defaults.headers.common[\"Authorization\"];\n          }\n        }\n      } else {\n        delete axios.defaults.headers.common[\"Authorization\"];\n        console.log(\"üîê Axios Authorization header cleared\");\n      }\n      setLoading(false);\n    };\n    checkAuth();\n  }, [token]);\n  const login = async (email, password) => {\n    try {\n      const response = await axios.post(\"/auth/login\", {\n        email,\n        password\n      });\n      if (response.data.requiresPasswordReset) {\n        return {\n          success: true,\n          requiresPasswordReset: true,\n          userId: response.data.userId,\n          email: response.data.email,\n          role: response.data.role\n        };\n      }\n      const {\n        token: newToken,\n        user: userData\n      } = response.data;\n      localStorage.setItem(\"token\", newToken);\n      setToken(newToken);\n      setUser(userData);\n      toast.success(\"Login successful!\");\n      return {\n        success: true\n      };\n    } catch (error) {\n      var _error$response3, _error$response3$data;\n      const message = ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.error) || \"Login failed\";\n      toast.error(message);\n      return {\n        success: false,\n        error: message\n      };\n    }\n  };\n  const resetPassword = async (userId, newPassword) => {\n    try {\n      await axios.post(\"/auth/reset-password\", {\n        userId,\n        newPassword\n      });\n      toast.success(\"Password updated successfully! Please login with your new password.\");\n      return {\n        success: true\n      };\n    } catch (error) {\n      var _error$response4, _error$response4$data;\n      const message = ((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : (_error$response4$data = _error$response4.data) === null || _error$response4$data === void 0 ? void 0 : _error$response4$data.error) || \"Password reset failed\";\n      toast.error(message);\n      return {\n        success: false,\n        error: message\n      };\n    }\n  };\n  const logout = () => {\n    localStorage.removeItem(\"token\");\n    setToken(null);\n    setUser(null);\n    toast.success(\"Logged out successfully\");\n  };\n  const changePassword = async (currentPassword, newPassword) => {\n    try {\n      await axios.post(\"/auth/change-password\", {\n        currentPassword,\n        newPassword\n      });\n      toast.success(\"Password changed successfully!\");\n      return {\n        success: true\n      };\n    } catch (error) {\n      var _error$response5, _error$response5$data;\n      const message = ((_error$response5 = error.response) === null || _error$response5 === void 0 ? void 0 : (_error$response5$data = _error$response5.data) === null || _error$response5$data === void 0 ? void 0 : _error$response5$data.error) || \"Password change failed\";\n      toast.error(message);\n      return {\n        success: false,\n        error: message\n      };\n    }\n  };\n  const value = {\n    user,\n    token,\n    loading,\n    login,\n    logout,\n    resetPassword,\n    changePassword\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 165,\n    columnNumber: 10\n  }, this);\n};\n_s2(AuthProvider, \"CqPWeQPIAZcxf1k81ln9DyaZT80=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","axios","toast","jsxDEV","_jsxDEV","defaults","timeout","baseURL","AuthContext","useAuth","_s","context","Error","AuthProvider","children","_s2","user","setUser","loading","setLoading","token","setToken","localStorage","getItem","checkAuth","headers","common","console","log","response","get","data","error","_error$response","_error$response$data","_error$response2","code","message","requiresPasswordReset","removeItem","status","login","email","password","post","success","userId","role","newToken","userData","setItem","_error$response3","_error$response3$data","resetPassword","newPassword","_error$response4","_error$response4$data","logout","changePassword","currentPassword","_error$response5","_error$response5$data","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/stalin_j/Downloads/test2/onboard/frontend/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport toast from \"react-hot-toast\";\n\n// Configure axios defaults\naxios.defaults.timeout = 15000; // 15 second timeout\naxios.defaults.baseURL = \"http://localhost:5001/api\";\n\nconst AuthContext = createContext();\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error(\"useAuth must be used within an AuthProvider\");\n  }\n  return context;\n};\n\nexport const AuthProvider = ({ children }) => {\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [token, setToken] = useState(localStorage.getItem(\"token\"));\n\n  // Check if user is authenticated on app load and configure axios defaults\n  useEffect(() => {\n    const checkAuth = async () => {\n      // Configure axios defaults first\n      if (token) {\n        axios.defaults.headers.common[\"Authorization\"] = `Bearer ${token}`;\n        console.log(\n          \"üîê Axios Authorization header set:\",\n          axios.defaults.headers.common[\"Authorization\"]\n        );\n\n        try {\n          const response = await axios.get(\"/auth/me\");\n          setUser(response.data.user);\n        } catch (error) {\n          console.error(\"Auth check failed:\", error);\n\n          // Handle different types of errors\n          if (\n            error.code === \"ECONNABORTED\" ||\n            error.message === \"Request aborted\"\n          ) {\n            console.log(\"üîê Auth request timed out or was aborted\");\n            // Don't clear token for timeout errors, just log and continue\n            setUser(null);\n          } else if (error.response?.data?.requiresPasswordReset) {\n            console.log(\"üîê User needs to change temporary password\");\n            toast.error(\"Please change your temporary password to continue\");\n            localStorage.removeItem(\"token\");\n            setToken(null);\n            setUser(null);\n            delete axios.defaults.headers.common[\"Authorization\"];\n          } else if (error.response?.status === 401) {\n            // Invalid token - clear it\n            console.log(\"üîê Invalid token, clearing auth\");\n            localStorage.removeItem(\"token\");\n            setToken(null);\n            setUser(null);\n            delete axios.defaults.headers.common[\"Authorization\"];\n          } else {\n            // Other errors - clear auth to be safe\n            console.log(\"üîê Auth error, clearing auth:\", error.message);\n            localStorage.removeItem(\"token\");\n            setToken(null);\n            setUser(null);\n            delete axios.defaults.headers.common[\"Authorization\"];\n          }\n        }\n      } else {\n        delete axios.defaults.headers.common[\"Authorization\"];\n        console.log(\"üîê Axios Authorization header cleared\");\n      }\n      setLoading(false);\n    };\n\n    checkAuth();\n  }, [token]);\n\n  const login = async (email, password) => {\n    try {\n      const response = await axios.post(\"/auth/login\", {\n        email,\n        password,\n      });\n\n      if (response.data.requiresPasswordReset) {\n        return {\n          success: true,\n          requiresPasswordReset: true,\n          userId: response.data.userId,\n          email: response.data.email,\n          role: response.data.role,\n        };\n      }\n\n      const { token: newToken, user: userData } = response.data;\n\n      localStorage.setItem(\"token\", newToken);\n      setToken(newToken);\n      setUser(userData);\n\n      toast.success(\"Login successful!\");\n      return { success: true };\n    } catch (error) {\n      const message = error.response?.data?.error || \"Login failed\";\n      toast.error(message);\n      return { success: false, error: message };\n    }\n  };\n\n  const resetPassword = async (userId, newPassword) => {\n    try {\n      await axios.post(\"/auth/reset-password\", {\n        userId,\n        newPassword,\n      });\n\n      toast.success(\n        \"Password updated successfully! Please login with your new password.\"\n      );\n      return { success: true };\n    } catch (error) {\n      const message = error.response?.data?.error || \"Password reset failed\";\n      toast.error(message);\n      return { success: false, error: message };\n    }\n  };\n\n  const logout = () => {\n    localStorage.removeItem(\"token\");\n    setToken(null);\n    setUser(null);\n    toast.success(\"Logged out successfully\");\n  };\n\n  const changePassword = async (currentPassword, newPassword) => {\n    try {\n      await axios.post(\"/auth/change-password\", {\n        currentPassword,\n        newPassword,\n      });\n\n      toast.success(\"Password changed successfully!\");\n      return { success: true };\n    } catch (error) {\n      const message = error.response?.data?.error || \"Password change failed\";\n      toast.error(message);\n      return { success: false, error: message };\n    }\n  };\n\n  const value = {\n    user,\n    token,\n    loading,\n    login,\n    logout,\n    resetPassword,\n    changePassword,\n  };\n\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}